{"version":3,"sources":["components/LineChart.js","components/PieChart.js","components/RadarChart.js","App.js","index.js"],"names":["LineChart","state","states","data","value","extractData","datasets","map","label","borderColor","fill","obj","includes","State","find","set","unshift","newData","labels","setState","handleChange","event","target","addState","e","preventDefault","fetchData","removeState","filter","this","fetch","then","response","json","className","options","maintainAspectRatio","height","width","legend","display","boxWidth","fontSize","htmlFor","id","name","onChange","onClick","React","Component","originalData","backgroundColor","drilldownData","PieChart","JSON","parse","stringify","back","drillDown","item","length","goBack","scale","ticks","suggestedMin","suggestedMax","RadarChart","tableView","toggleView","headers","i","rows","fruit","nums","num","table","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.291d5041.chunk.js","sourcesContent":["import React from 'react'\nimport { Line } from 'react-chartjs-2'\n\nclass LineChart extends React.Component{\n    state={\n        states: ['California', 'Texas', 'Arkansas', 'Florida', 'New York', 'Utah'],\n        data: {},\n        value: ''\n    }\n    componentDidMount(){\n        this.fetchData()\n    }\n    fetchData(){\n        fetch('https://datausa.io/api/data?drilldowns=State&measures=Average Age')\n        .then(response => response.json())\n        .then(data => this.extractData(data.data))\n    }\n    extractData = (data) =>{\n        const states = this.state.states\n        const datasets = states.map( state => {\n            return {\n                label: state, \n                data: [], \n                borderColor: \"rgba(75,192,192,1)\",\n                fill: false\n            }\n        })\n        data.map(obj => {\n            if(states.includes(obj.State)){\n                datasets.find(set => set.label === obj.State).data.unshift(obj['Average Age'])\n            }\n        })\n        const newData = {\n            labels: [2014, 2015, 2016, 2017, 2018],\n            datasets\n        }\n        this.setState({data: newData})\n    }\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n    }\n    addState = (e) =>{\n        e.preventDefault()\n        if(!this.state.states.includes(this.state.value)){\n            this.setState({ states: [this.state.value, ...this.state.states] }, this.fetchData)\n        }\n    }\n    removeState = (e) =>{\n        e.preventDefault()\n        if(this.state.states.includes(this.state.value)){\n            this.setState({ states: this.state.states.filter(state => state !== this.state.value) }, this.fetchData)\n        }\n    }\n    render(){\n        return(\n            <div className=\"line chart\">\n                <h2>Average Age of States Over Time</h2>\n                <Line \n                    data={this.state.data} \n                    options={{ \n                        maintainAspectRatio: false,\n                        height: 400,\n                        width: 80,\n                        legend: {\n                            display: true,\n                            labels: {\n                                boxWidth: 10,\n                                fontSize: 10\n                            }\n                        }\n                        }}/>\n                <form>\n                    <fieldset>\n                        <label htmlFor=\"state\">State</label>\n                        <select className=\"select-style\" id=\"state\" name=\"state\" value={this.state.value} onChange={this.handleChange}>\n                            <option value=\"Alabama\">Alabama</option>\n                            <option value=\"Alaska\">Alaska</option>\n                            <option value=\"Arizona\">Arizona</option>\n                            <option value=\"Arkansas\">Arkansas</option>\n                            <option value=\"California\">California</option>\n                            <option value=\"Colorado\">Colorado</option>\n                            <option value=\"Connecticut\">Connecticut</option>\n                            <option value=\"Delaware\">Delaware</option>\n                            <option value=\"District of Columbia\">District of Columbia</option>\n                            <option value=\"Florida\">Florida</option>\n                            <option value=\"Georgia\">Georgia</option>\n                            <option value=\"Hawaii\">Hawaii</option>\n                            <option value=\"Idaho\">Idaho</option>\n                            <option value=\"Illinois\">Illinois</option>\n                            <option value=\"Indiana\">Indiana</option>\n                            <option value=\"Iowa\">Iowa</option>\n                            <option value=\"Kansas\">Kansas</option>\n                            <option value=\"Kentucky\">Kentucky</option>\n                            <option value=\"Louisiana\">Louisiana</option>\n                            <option value=\"Maine\">Maine</option>\n                            <option value=\"Maryland\">Maryland</option>\n                            <option value=\"Massachusetts\">Massachusetts</option>\n                            <option value=\"Michigan\">Michigan</option>\n                            <option value=\"Minnesota\">Minnesota</option>\n                            <option value=\"Mississippi\">Mississippi</option>\n                            <option value=\"Missouri\">Missouri</option>\n                            <option value=\"Montana\">Montana</option>\n                            <option value=\"Nebraska\">Nebraska</option>\n                            <option value=\"Nevada\">Nevada</option>\n                            <option value=\"New Hampshire\">New Hampshire</option>\n                            <option value=\"New Jersey\">New Jersey</option>\n                            <option value=\"New Mexico\">New Mexico</option>\n                            <option value=\"New York\">New York</option>\n                            <option value=\"North Carolina\">North Carolina</option>\n                            <option value=\"North Dakota\">North Dakota</option>\n                            <option value=\"Ohio\">Ohio</option>\n                            <option value=\"Oklahoma\">Oklahoma</option>\n                            <option value=\"Oregon\">Oregon</option>\n                            <option value=\"Pennsylvania\">Pennsylvania</option>\n                            <option value=\"Puerto Rico\">Puerto Rico</option>\n                            <option value=\"Rhode Island\">Rhode Island</option>\n                            <option value=\"South Carolina\">South Carolina</option>\n                            <option value=\"South Dakota\">South Dakota</option>\n                            <option value=\"Tennessee\">Tennessee</option>\n                            <option value=\"Texas\">Texas</option>\n                            <option value=\"Utah\">Utah</option>\n                            <option value=\"Vermont\">Vermont</option>\n                            <option value=\"Virginia\">Virginia</option>\n                            <option value=\"Washington\">Washington</option>\n                            <option value=\"West Virginia\">West Virginia</option>\n                            <option value=\"Wisconsin\">Wisconsin</option>\n                            <option value=\"Wyoming\">Wyoming</option></select>\n                    </fieldset>\n                    <button onClick={(e) => this.addState(e)}>Add</button>\n                    <button onClick={(e) => this.removeState(e)}>Remove</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default LineChart;","import React from 'react'\nimport { Pie } from 'react-chartjs-2';\n\n//data from https://www.cdc.gov/nchs/products/databriefs/db232.htm\nconst originalData = {\n    labels: ['Under 20', '20-24', '25-29', '30-34', '35 and Over'],\n    datasets: [\n      {\n        label: 'Age of First Time Mothers',\n        fill: false,\n        data: [13.4, 28.7, 27.7, 21.1, 9.1],\n        backgroundColor: [\n          '#F17CB0',\n          '#5DA5DA',\n          '#60BD68',\n          '#ac6cac',\n          '#DECF3F'\n        ]\n      }\n    ]\n  };\n\n//sample data for drilldown\nconst drilldownData = [\n    // 'Under 20' \n    [['Under 16', '16', '17', '18', '19'], [6, 10, 23, 25, 36]], \n    // '20-24'\n    [['20', '21', '22', '23', '24'], [27, 19, 20, 23, 11]],\n    // '25-29' \n    [['25', '26', '27', '28', '29'], [15, 18, 24, 32, 11]], \n    // '30-34' \n    [['30', '31', '32', '33', '34'], [40, 30, 20, 8, 2]], \n    // '35 and Over'\n    [['35', '36', '37', '38', '39 and Over'], [50, 30, 15, 10, 5]]\n]\n\n\nclass PieChart extends React.Component{\n    state={\n        data: JSON.parse(JSON.stringify(originalData)),\n        back: false\n    }\n    drillDown = (event, item) =>{\n        if(!item.length || this.state.back) return\n        \n        let newData = this.state.data\n        newData.labels = drilldownData[item[0]['_index']][0]\n        newData.datasets[0].data = drilldownData[item[0]['_index']][1]\n        this.setState({ data: newData, back: true})\n    }\n    goBack = () => {\n        this.setState({ data: JSON.parse(JSON.stringify(originalData)), back: false})\n    }\n    render(){\n        const options = {\n            'onClick' : this.drillDown\n        }\n        return(\n            <div className=\"pie chart\">\n                <h2>Age of First Time Mothers</h2>\n                <Pie data={this.state.data} options={options}/>\n                {this.state.back ? <p className=\"back\" onClick={this.goBack}>Back</p> : ''}\n            </div>\n        )\n    }\n}\n\nexport default PieChart;","import React from 'react'\nimport { Radar } from 'react-chartjs-2';\n\n//data gathered from https://www.fda.gov/media/77402/download\nconst data = {\n    labels: ['Total Fat', 'Total Carbohydrate', 'Dietary Fiber', 'Sugar', 'Protein'],\n    datasets: [\n        {\n            label: 'Avocado',\n            data: [4.5, 3, 1, 0, 1],\n            backgroundColor: 'rgba(0, 153, 51, 0.3)',\n            fill: true\n        },\n        {\n            label: 'Orange',\n            data: [0, 19, 3, 14, 1],\n            backgroundColor: 'rgba(255, 153, 51, 0.3)',\n            fill: true\n        }\n    ]\n};\nconst options = {\n  scale: {\n    ticks: {\n        suggestedMin: 0,\n        suggestedMax: 20\n    }\n  }\n}\n\nclass RadarChart extends React.Component{\n    state = {\n        tableView: false\n    }\n    toggleView = () =>{\n        this.setState({ tableView: !this.state.tableView })\n    }\n    render(){\n        const table = () => {\n            let headers = data.labels.map( (label, i) => <th key={i}>{label}</th>)\n            let rows = data.datasets.map((fruit, i) => {\n                let nums = fruit.data.map(num => <td>{num}</td> )\n                return(\n                <tr>\n                    <td>{fruit.label}</td>\n                    {nums}\n                </tr>)\n            })\n            return (\n                <table className=\"radar-table\">\n                    <tbody>\n                        <tr>\n                            <th>Fruit</th>\n                            {headers}\n                        </tr>\n                        {rows}\n                    </tbody>\n                </table> \n            )\n        }\n        return(\n            <div className=\"radar chart\">\n                <h2>Breakdown of Avocado vs Orange</h2>\n                {this.state.tableView ? \n                    table():\n                    <Radar data={data} options={options}/>}\n                <p onClick={this.toggleView}>Switch to {this.state.tableView ? \"Graph\": \"Table\"}</p>\n            </div>\n        )\n    }\n}\n\nexport default RadarChart;","import LineChart from './components/LineChart'\nimport PieChart from './components/PieChart'\nimport RadarChart from './components/RadarChart'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">  \n      <h1>Chart Examples</h1>\n      <LineChart />\n      <PieChart />\n      <RadarChart />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}